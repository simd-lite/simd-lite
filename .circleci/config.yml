version: 2.1

#orbs:
#  codecov: codecov/codecov@1.0.4

commands:
  run_tests:
    description: "A very simple command for demonstration purposes"
    steps:     
      - checkout
        #
        # - run:
        #   name: Install CMAKE
        #   command: 'apt-get update && apt-get install -y cmake'
        # - restore_cache:
        #   keys:
        #   key: v4-cmake-{{ arch }}-3.14.1
        # - run:
        #   name: Fetch newer CMAKE ...
        #   command: 'wget https://github.com/Kitware/CMake/releases/download/v3.14.1/cmake-3.14.1.tar.gz && tar zxf cmake-3.14.1.tar.gz && cd cmake-3.14.1 && cmake . && make'
        # - save_cache:
        #   paths:
        #     - cmake-3.14.1
        #   key: v4-cmake-{{ arch }}-3.14.1
        # - run:
        #   name: install newer CMAKE ...
        #   command: 'cd cmake-3.14.1 && make install'
        #
      - run:
          name: Install rustfmt
          command: rustup component add rustfmt
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version
      - run:
          name: Calculate dependencies
          command: cargo generate-lockfile
      - restore_cache:
          keys:
            - v4-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Rustfmt Check
          command: cargo fmt --all -- --check
      - run:
          name: Build all targets
          command: cargo build --all --all-targets
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v4-cargo-cache-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Run all tests
          command: cargo test --all
      #- run:
      #    name: Install nightly
      #    command: rustup install nightly
      # Disabled for now since clircleci isn't reliable when it comes to providing machine imags able to run perf
      # - run:
      #    name: Run cycle benchmarks
      #     command: make perf

jobs:
  test:
    docker:
      - image: rust:1
    environment:
      RUSTFLAGS: '-C target-cpu=native'
    steps:
      - run_tests: {}
  test-sse:
    docker:
      - image: rust:1
    environment:
      RUSTFLAGS: '-C target-cpu=native -C target-feature=-avx2'
    steps:
      - run_tests: {}

workflows:
  version: 2
  workflow:
    jobs:
    - test
    - test-sse

